** Some comments and outputs from my side**

Task 1:
    - working with the module argparse -- command-line parsing library
    - added a new parameter by using method add_argument(). This parameter allows the user to select
        the subset of tests to be run through a comma-separated list.
    - user must list the names of the tests without extensions, they are added to the files' names later on

Task 2:
    - created a new class -- child-class of the ExperimentConfiguration class -- (model_building folder)
    - used Keras for creating Neural Network
    - added new technique for Neural Network into enumeration in _experiment_configuration_.py
    - creation of the model happens in the build_model() method
    - overriden _getstate_ and _setstate_ methods

Task 3:
    - added support to explore number of epochs and batch-size through the configuration file
    - added new hyperparameters for the Neural Network


Task 4:
    - added support for the topology specification,
    i.e. added support for depth, width, activation functions of the neural network, specified by the user
    - added new hyperparameters for the NN, which are added to the signature in the _compute_signature() and
    are used to build the model in the build_model() method

Task 5:
    - Instead of dumping the entire model object using pickle, I should save it to a file (as a byte stream) using the respective deep learning framework's
    serialization method, and then dump the file contents using pickle
    - When loading the model, I first load the byte content from the pickle file, then restore the model using keras' load methods
    - worked with _get-state_ and _set_state_ methods for serialization (in the neural_network_experiment_configuration file)
    - there was a problem with serialisation, it was not working (at least I suspect it wasn't) for any configuration; I suspect that overridden method in the base
    class was not called as it should have. So, I added new parameter for the constructor of the Regressor. Thus, the Regressor actually gets the configuration object as it should
    and the _getstate_, _setstate_ methods are being called for sure.

